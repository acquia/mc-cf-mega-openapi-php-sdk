<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace MauticInc\MEGA\OpenAPI\Normalizer;

class NormalizerFactory
{
    public static function create()
    {
        $normalizers = [];
        $normalizers[] = new \Symfony\Component\Serializer\Normalizer\ArrayDenormalizer();
        $normalizers[] = new InstanceNormalizer();
        $normalizers[] = new LocationNormalizer();
        $normalizers[] = new PaginationLinksNormalizer();
        $normalizers[] = new PaginationMetaNormalizer();
        $normalizers[] = new ValidationErrorNormalizer();
        $normalizers[] = new RelLinkNormalizer();
        $normalizers[] = new ResponseInstanceNormalizer();
        $normalizers[] = new ResponseArrayOfInstancesNormalizer();
        $normalizers[] = new ResponseLocationNormalizer();
        $normalizers[] = new ResponseArrayOfLocationsNormalizer();
        $normalizers[] = new ResponseDeletedNormalizer();
        $normalizers[] = new ResponseForbiddenNormalizer();
        $normalizers[] = new ResponseNotFoundNormalizer();
        $normalizers[] = new ResponseNotImplementedNormalizer();
        $normalizers[] = new ResponseRateLimitedNormalizer();
        $normalizers[] = new ResponseUnauthorizedNormalizer();
        $normalizers[] = new ResponseUnprocessableNormalizer();

        return $normalizers;
    }
}
